apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "k-rsync.fullname" . }}-fpart"
  labels:
{{ include "k-rsync.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{ include "k-rsync.fullname" . }}-fpart"
    spec:
      initContainers:
        - name: fpart
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: "/srcd"
          command:
            - "/bin/bash"
          args:
            - "-c"
            - "fpart -vv -n $(NUM_PARTITIONS) $(FPART_OPTS) -o /parts/fpart.out . | tee /parts/fpart.log"
          env:
            - name: NUM_PARTITIONS
              value: {{ .Values.partitions | quote }}
            - name: FPART_OPTS
              value: {{ .Values.fpartOpts | quote }}
          volumeMounts:
            - name: source
              mountPath: /srcd
              readOnly: true
            - name: parts
              mountPath: /parts
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      serviceAccountName: {{ template "k-rsync.serviceAccountName" . }}
      containers:
        - name: amqp-publish
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: "/srcd"
          command:
            - "/bin/bash"
          args:
            - "-c"
            - 'find /parts/fpart.out.* -exec sh -c "cat {} | /usr/bin/amqp-publish --url=$(BROKER_URL) --routing-key=$(QUEUE)" \;'
          env:
            - name: BROKER_URL
              value: 'amqp://guest:guest@{{ include "k-rsync.fullname" . }}-message-broker:{{ .Values.rabbitmq.service.port }}'
            - name: QUEUE
              value: "{{ .Values.queue }}"
          volumeMounts:
            - name: source
              mountPath: /srcd
              readOnly: true
            - name: parts
              mountPath: /parts
              readOnly: true
      restartPolicy: OnFailure
      volumes:
        - name: source
          persistentVolumeClaim:
            claimName: "{{ .Values.pvc.source.claimName }}"
        - name: parts
          emptyDir: {}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "k-rsync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}