apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "k-rsync.fullname" . }}-rsync"
  labels:
{{ include "k-rsync.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  completions: {{ .Values.partitions }}
  parallelism: {{ .Values.parallelism }}
  template:
    metadata:
      name:  "{{ include "k-rsync.fullname" . }}-rsync"
    spec:
      initContainers:
        - name: amqp-declare-queue
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/bin/amqp-declare-queue
          args:
            - "--url=$(BROKER_URL)"
            - "--queue=$(QUEUE)"
          env:
            - name: BROKER_URL
              value: 'amqp://guest:guest@{{ include "k-rsync.fullname" . }}-message-broker:{{ .Values.rabbitmq.service.port }}'
            - name: QUEUE
              value: "{{ .Values.queue }}"
        - name: amqp-consume
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/bash"
          args:
            - "-c"
            - "/usr/bin/amqp-consume --url=$(BROKER_URL) --queue=$(QUEUE) -c 1 cat > /parts/part.out"
          env:
            - name: BROKER_URL
              value: 'amqp://guest:guest@{{ include "k-rsync.fullname" . }}-message-broker:{{ .Values.rabbitmq.service.port }}'
            - name: QUEUE
              value: "{{ .Values.queue }}"
          volumeMounts:
            - name: parts
              mountPath: /parts
      serviceAccountName: {{ template "k-rsync.serviceAccountName" . }}
      containers:
      - name: rsync
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - rsync
        args:
          - "--files-from=/parts/part.out"
        {{  range .Values.rsyncOpts }}
          - {{ . | quote }}
        {{ end }}
          - "--stats"
          - "--human-readable"
          - "--progress"
          - "/srcd/"
          - "/dest/"
        volumeMounts:
        - name: source
          mountPath: /srcd
          readOnly: true
        - name: destination
          mountPath: /dest
        - name: parts
          mountPath: /parts
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: OnFailure
      volumes:
        - name: source
          persistentVolumeClaim:
            claimName: "{{ .Values.pvc.source.claimName }}"
            readOnly: true
        - name: destination
          persistentVolumeClaim:
            claimName: "{{ .Values.pvc.dest.claimName }}"
        - name: parts
          emptyDir: {}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "k-rsync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}